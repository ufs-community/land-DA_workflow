pipeline {
  agent none
  stages {
    stage('Land DA workflow') {
       agent {
        label 'built-in'   
       }
      steps {
        script {
          for (label in pullRequest.labels) {
            if ((label.matches("orion"))) {
                 env.CHOICE_NODE='orion'
            }  
            else if ((label.matches("hera"))) { 
                env.CHOICE_NODE='hera'
            }  
            else if ((label.matches("jet"))) {
                env.CHOICE_NODE='jet'
            } 
            else { 
                env.CHOICE_NODE='none'
            }
         }
// Why do I need another if..block, because it just works this way.

            if (CHOICE_NODE == 'orion') {
                echo "Starting up orion ${CHOICE_NODE}...this might take 5-10 minutes...please be patient."
               
            } 
             else if (CHOICE_NODE == 'jet') {
                echo "Starting up jet ${CHOICE_NODE}...this might take 5-10 minutes...please be patient."
            }
             else if (CHOICE_NODE == 'hera') {
                 echo "Starting up hera ${CHOICE_NODE}...this might take 5-10 minutes...please be patient."
            }
             else {
                echo "${CHOICE_NODE} is NOT a platform, moving on..."
            }
       }    
    }
  } 
  stage('Run Land DA Workflow on Hera') {
        agent {
          label "hera"
        }
        environment {
        ACCNR = 'nems'
        NODE_PATH = '/scratch1/NCEPDEV/stmp2/role.epic/'
      }
      steps {
          
        cleanWs()
        checkout scm
        sh '''
        pwd
        export img=/scratch1/NCEPDEV/nems/role.epic/containers/ubuntu20.04-intel-ue-landda-v1.1.0.img
        mkdir sandbox
        cd sandbox/
        ln -s /scratch1/NCEPDEV/nems/role.epic/landda/inputs .
        singularity exec -H $PWD $img cp -r /opt/land-DA_workflow .
        cd ..
        ln -s /scratch1/NCEPDEV/nems/role.epic/landda/inputs .
        git clone -b Jenkins_Pipeline --recursive https://github.com/ufs-community/land-DA_workflow.git
        mv land-DA_workflow/  PR_land-DA_workflow
        cd PR_land-DA_workflow
        mkdir build && cd build
        export JEDI_EXECDIR=${JEDI_INSTALL}/fv3-bundle/build/bin
        export RTPWD=/work/noaa/nems/emc.nemspara/RT/NEMSfv3gfs/develop-20230728
        export INPUTDATA_ROOT=/work/noaa/nems/emc.nemspara/RT/NEMSfv3gfs/input-data-20221101
        module load intel/2022.1.2 impi/2022.1.2
        ecbuild ../ && make -j4
        cd ..
        cd ..
        cd sandbox/land-DA_workflow/build/bin/
        cp calcfIMS.exe /scratch1/NCEPDEV/stmp2/role.epic/jenkins/workspace/and-da_Land_DA_Jenkinsfile_PR-25/PR_land-DA_workflow/build/bin/
        cp fv3jedi_letkf.x /scratch1/NCEPDEV/stmp2/role.epic/jenkins/workspace/and-da_Land_DA_Jenkinsfile_PR-25/PR_land-DA_workflow/build/bin/
        cp python /scratch1/NCEPDEV/stmp2/role.epic/jenkins/workspace/and-da_Land_DA_Jenkinsfile_PR-25/PR_land-DA_workflow/build/bin/
        cd ..
        cd ..
        cd ..
        cd ..
        cd PR_land-DA_workflow/
        sed -i 's|hera.internal|hera.sing|g' settings_DA_cycle_gdas
        sed -i 's/da-cpu/nems/g' submit_cycle.sh
        export USE_SINGULARITY=yes
        pwd
        ./do_submit_cycle.sh settings_DA_cycle_gdas
        '''
      }
    }        
    stage('Run Land DA Workflow on Orion') {
        agent {
          label "orion"
        }
        environment {
        ACCNR = 'nems'
        NODE_PATH = '/work/noaa/epic/role-epic/'
      }
      steps {
          
        cleanWs()
        checkout scm
        sh '''
        pwd
        export img=/work/noaa/epic-ps/role-epic-ps/containers/ubuntu20.04-intel-ue-landda-v1.1.0.img
        mkdir sandbox
        cd sandbox/
        ln -s /work/noaa/epic-ps/role-epic-ps/landda/inputs .
        module load intel/2022.1.2 impi/2022.1.2
        module load singularity/3.8.3 
        singularity exec -H $PWD $img cp -r /opt/land-DA_workflow .
        cd land-DA_workflow/
        sed -i 's|hera.internal|orion.sing|g' settings_DA_cycle_gdas
        sed -i 's/da-cpu/epic/g' submit_cycle.sh
        export USE_SINGULARITY=yes
        pwd
        ./do_submit_cycle.sh settings_DA_cycle_gdas
        '''
      }
    }    
    stage('Run Land DA Workflow on Hercules') {
        agent {
          label "hercules"
        }
        environment {
        ACCNR = 'epic'
        NODE_PATH = '/work/noaa/epic/role-epic/'
      }
      steps {
          
        cleanWs()
        checkout scm
        sh '''
        pwd
        export img=/work/noaa/epic-ps/role-epic-ps/containers/ubuntu20.04-intel-ue-landda-release-public-v1.1.0.img
        mkdir sandbox
        cd sandbox/
        ln -s /work/noaa/epic-ps/role-epic-ps/landda/inputs .
        module use /work/noaa/epic-ps/role-epic-ps/spack-stack/spack-stack-1.3.1-hercules/envs/unified-env/install/modulefiles/Core
        module load stack-intel/2021.7.1
        module load stack-intel-oneapi-mpi/2021.7.1
        module load singularity/3.8.7 
        singularity exec -H $PWD $img cp -r /opt/land-DA_workflow .
        cd land-DA_workflow/
        sed -i 's|hera.internal|hercules.sing|g' settings_DA_cycle_gdas
        sed -i 's/da-cpu/epic/g' submit_cycle.sh
        sed -i 's/debug/windfall/g' submit_cycle.sh
        export USE_SINGULARITY=yes
        pwd
        ./do_submit_cycle.sh settings_DA_cycle_gdas
        ''' 
        }
    } 
        stage('Run Land DA Workflow on Jet') {
        agent {
          label "jet"
        }
        environment {
        ACCNR = 'hfv3gfs'
        NODE_PATH = '/mnt/lfs4/HFIP/hfv3gfs/role.epic/'
      }
      steps {
          
        cleanWs()
        checkout scm
        sh '''
        pwd
        export img=/mnt/lfs4/HFIP/hfv3gfs/role.epic/containers/ubuntu20.04-intel-ue-landda-v1.1.0.img
        mkdir sandbox
        cd sandbox/
        ln -s /mnt/lfs4/HFIP/hfv3gfs/role.epic/landda/inputs .
        module load intel/2022.1.2 impi/2022.1.2
        singularity exec -H $PWD $img cp -r /opt/land-DA_workflow .
        cd land-DA_workflow/
        sed -i 's|hera.internal|jet.sing|g' settings_DA_cycle_gdas
        sed -i 's/da-cpu/hfv3gfs/g' submit_cycle.sh
        export USE_SINGULARITY=yes
        pwd
        ./do_submit_cycle.sh settings_DA_cycle_gdas
        '''
      }
    }
  }  
}
